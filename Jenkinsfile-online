pipeline {
  agent {
      kubernetes {
        label 'hello'
        yaml '''
apiVersion: v1
kind: Pod
metadata:
   name: clean-ci
spec:
   containers:
   - name: docker
     image: 'docker:stable-dind'
     command:
     - dockerd
     - --host=unix:///var/run/docker.sock
     - --host=tcp://0.0.0.0:8000
     - --insecure-registry=157.230.248.65:30002
     securityContext:
       privileged: true
     volumeMounts:
     - mountPath: /var/run
       name: cache-dir
   - name: clean-ci
     image: 'docker:stable'
     command: ["/bin/sh"]
     args: ["-c","while true; do sleep 86400; done"]
     volumeMounts:
     - mountPath: /var/run
       name: cache-dir
   - name: kubectl
     image: 'bitnami/kubectl'
     command: ["/bin/sh"]
     args: ["-c","chown 777 /home/jenkins","while true; do sleep 86400; done"]
     volumeMounts:
     - mountPath: /var/run
       name: cache-dir
   volumes:
   - name: cache-dir
     emptyDir: {}
        '''.stripIndent()
          }
          }
    stages {
        stage ('checkout scm') {
            steps {
                checkout(scm)
            }
       }
        stage('Build') {
            steps {
              container ('docker'){
              sh 'docker build -t 157.230.248.65:30002/myharbor/gojgq:v1.0 .'
              sh 'docker login 157.230.248.65:30002 -u jgq -p Jgq123456'
              sh 'docker push 157.230.248.65:30002/myharbor/gojgq:v1.0'
              sh '''
              echo "you did it!!!!!!!  yes!!"
              '''
        }
      }
        }
        stage('deploy to dev'){
          steps {
             container ('kubectl'){
                    sh '  kubectl apply -f -'
             }
          }
        }


           stage('push with tag'){
             steps {
                container ('docker'){
                    sh '''
                    echo "git push"
                    '''
                }
             }
           }

           stage('deploy to prod'){
             steps {
                container ('docker'){
                    sh '''
                    echo "deploy"
                    '''
                }
             }
           }


     }
}
